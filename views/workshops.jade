extends templates/layout

block content
    .container
        if session && session.isAdmin
            .row
                a.btn.btn-primary(href="/workshop/create")
                    .fa.fa-plus
                    |  Create new Workshop
        .row
            .col-xs-12
                .well.text-center
                    h4 Search for a session.
                    p Are you looking for workshops at a specific time? To search for a specific workshop type in the time you are searching for into the search bar. You can also search for tags, keywords, and faciliatators!
                    p Example: 
                        code "18th 9:00 AM-10:30 AM"
        .row
            .col-xs-12
                #options
                table.table.table-striped#table
        script.
            $(function() {
                var options = {
                    data: !{JSON.stringify(data)},
                    columns: !{JSON.stringify(keys)},
                    stateSave: true,
                    scrollX: true
                };
                options.columnDefs = [{
                    render: function (data, type, row) {
                        return "<a class='btn btn-primary btn-xs' href='/workshop/" + row._id + "'><span class='fa fa-arrow-right'>View</span></a>"
                    },
                    targets: [0] // View button
                }, {
                    render: function (data, type, row) {
                        var out = "";
                        if (data.indexOf("Youth") != -1) {
                            out = out.concat("<span class='label label-info' data-toggle='tooltip' title='Youth'>Y</span>  ");
                        }
                        if (data.indexOf("Young Adult") != -1) {
                            out = out.concat("<span class='label label-success' data-toggle='tooltip' title='Young Adult'>YA</span>  ");
                        }
                        if (data.indexOf("Young Chaperone") != -1) {
                            out = out.concat("<span class='label label-warning' data-toggle='tooltip' title='Young Chaperone'>YC</span>  ");
                        }
                        if (data.indexOf("Chaperone") != -1) {
                            out = out.concat("<span class='label label-danger' data-toggle='tooltip' title='Chaperone'>Ch</span>  ");
                        }
                        return out;
                    },
                    targets: [3] // Eligible types
                }, {
                    render: function (data, type, row) {
                        var out = "";
                        for (i=0; i<data.length; i++) {
                            var start = data[i].start,
                                end = data[i].end,
                                label = '';
                            if ((data[i].registered / data[i].capacity) <= .50) { // Not yet full
                                label = 'label-success';
                            } else if ((data[i].registered / data[i].capacity) <= .75) { // Half full
                                label = 'label-warning';
                            } else if ((data[i].registered / data[i].capacity) < 1) { // Almost full!
                                label = 'label-danger';
                            } else {
                                label = 'label-default'
                            }
                            out = out.concat("<span class='label " + label + "'>" + data[i].registered + "/" + data[i].capacity + "</span> " + start + "-" + end + " @ " + data[i].venue + "<br>");
                        }
                        return out;
                    },
                    width: "250px",
                    targets: [-1] // Attending.
                }, {
                    render: function (data, type, row) {
                        // Can't use .map since IE doesn't have any brains.
                        var out = "";
                        for (i = 0; i < data.length; i++) {
                            out = out.concat("<span class='label label-default'>" + data[i] + "</span>  ")
                        }
                        return out;
                    },
                    targets: [5] // Labels.
                }];
                options.createdRow = function(row, data, dataIndex) {
                    $(row).find('.label').tooltip();
                }
                var table = $('#table').dataTable(options);
                var colvis = new $.fn.dataTable.ColVis(table);
                $(colvis.button()).insertAfter('#options');
            });
