extends templates/layout

block content
    .container
        .row
            ul.nav.nav-tabs#options
                li.tabled#groups(class=selected === 'groups' ? 'active' : '')
                    a(href='/admin/groups') Groups
                li.tabled#groups(class=selected === 'waitlist' ? 'active' : '')
                    a(href='/admin/waitlist') Waitlist
                li.tabled#members(class=selected === 'members' ? 'active' : '')
                    a(href='/admin/members') Members
                li.tabled#facilitators(class=selected === 'facilitators' ? 'active' : '')
                    a(href='/admin/facilitators') Facilitators
                li#workshops
                    a(href='/workshops') Workshops
                li#statistics
                    a(href="/statistics") Statistics
                li#email
                    a(href="/emails") Emails
        .row
            .col-xs-12
                table.table.table-striped#table
        script.
            $(function() {
                var table, selected = '#{selected}';
                // Setup Table
                var options = {
                    data: !{JSON.stringify(data)},
                    columns: !{JSON.stringify(keys)},
                    stateSave: true,
                    stateDuration: 60*60*24*5 // 5 days.
                    //- scrollX: true
                };
                var reorderOptions = {};
                if (selected === 'groups' || selected === 'waitlist') {
                    //- reorderOptions.fixedColumns = 1;
                    //- reorderOptions.fixedColumnsLeft = 2;
                    options.scrollX = true;
                    options.columnDefs = [
                        {
                            // Steps
                            render: function (data, type, row) {
                                var steps = ['conduct', 'details', 'youthInCare', 'members', 'documents', 'payments', 'workshops', 'checkin'];
                                var output = steps.map(function (v) {
                                    if (data[v]) {
                                        return "<button class='steps btn btn-xs btn-success' data-toggle='tooltip' title='" + v + "' data-url='/checkoff/" + row['_id'] + "/" + v + "'><i class='fa fa-check fa-fw'></i></button>";
                                    } else {
                                        return "<button class='steps btn btn-xs btn-danger' data-toggle='tooltip' title='" + v + "' data-url='/checkoff/" + row['_id'] + "/" + v + "'><i class='fa fa-remove fa-fw'></i></button>";
                                    }
                                }).join('');
                                if (row['youthInCareSupport'] > 0 || row['youthInCare'] > 0) {
                                    var yic = "<div class='tooltipped label label-success' data-toggle='tooltip' title='This group has " + row['youthInCare'] + " youth in care, " + row['youthInCareSupport'] + " support. '><i class='fa fa-flag fa-fw'></i>" + row['youthInCare'] + ", " + row['youthInCareSupport'] + "</div>";
                                    output = output.concat(yic);
                                }
                                if (row._notes === "true") {
                                    var star = "<div class='tooltipped label label-warning' data-toggle='tooltip' title='This group has notes.'><i class='fa fa-star fa-fw'></i></div>";
                                    output = output.concat(star);
                                }
                                return output;
                            },
                            targets: 0
                        },
                        {
                            // Tags
                            render: function (data, type, row) {
                                data = data.map(function (v) {
                                    return "<span class='badge badge-default'>" + v + "</span><br>";
                                }).join('');
                                return data;
                            },
                            targets: -2
                        },
                        {
                            // Edit and manage buttons.
                            render: function (data, type, row) {
                                var out = "<a class='btn btn-primary btn-xs' href='/manage/" + row._id + "'><i class='fa fa-edit'></i> Manage</a>";
                                out = out.concat("<a class='btn btn-info btn-xs' href='/notes/" + row._id + "'><i class='fa fa-file'></i> Notes</a>");
                                if (selected === 'waitlist') {
                                    out = out.concat("<a class='btn btn-warning btn-xs' href='/approve/" + row._id + "'><i class='fa fa-check'></i> Approve</a>")
                                }
                                return out;
                            },
                            targets: -1
                        },
                        {
                            // Member count.
                            render: function (data, type, row) {
                                return data.length;
                            },
                            targets: 4
                        },
                        {
                            // Reg Date
                            render: function (data, type, row) {
                                return "<small class='text-muted'>" + Date.parse(data) + "</small><br>" + new Date(data).toLocaleString();
                            },
                            targets: 13
                        }
                    ];
                    options.createdRow = function(row, data, dataIndex) {
                        $(row).find('.steps').tooltip().click(function () {
                            var button = $(this);
                            button.attr('disabled', true);
                            $.getJSON(button.data('url')).done(function (data) {
                                if (data.error) {
                                    alert('Unable to mark! Group does not meet prerequisites.');
                                } else if (data.done === true) {
                                    button.removeClass('btn-danger');
                                    button.addClass('btn-success');
                                    var icon = button.find('.fa');
                                    icon.removeClass('fa-remove');
                                    icon.addClass('fa-check');
                                } else if (data.done === false) {
                                    button.removeClass('btn-success');
                                    button.addClass('btn-danger');
                                    var icon = button.find('.fa');
                                    icon.removeClass('fa-check');
                                    icon.addClass('fa-remove');
                                }
                                button.removeAttr('disabled');
                            });
                        });
                        $(row).find('.tooltipped').tooltip();
                    };
                } else if (selected === 'members') {
                    options.scrollX = true;
                    options.columnDefs = [
                        {
                            render: function (data, type, row) {
                                data = "<a class='btn btn-default btn-xs' href='/manage/" + data + "'>Manage</a>";
                                return data;
                            },
                            targets: 1
                        }
                    ]
                } else if (selected === 'facilitators') {
                    options.columnDefs = [
                        {
                            render: function (data, type, row) {
                                return ['<div class="limited">', data, '</div>'].join('');
                            },
                            targets: [-1, -2, -3 ,-4, -5, -6]
                        },
                        {
                            render: function (data, type, row) {
                                return "<a class='btn btn-default btn-xs' href='/facilitator/" + row._id + "'>Edit</a>"
                            },
                            targets: 0
                        }
                    ];
                }
                //- console.log(options);
                table = $('#table').dataTable(options);
                // Setup Colreorder
                //- new $.fn.dataTable.ColReorder(table, { fixedColumns: 2 });
                // Setup Colvis
                var colvis = new $.fn.dataTable.ColVis(table);
                $(colvis.button()).insertAfter('#options');
            });
