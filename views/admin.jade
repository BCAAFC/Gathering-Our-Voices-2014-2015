extends templates/layout

block content
    .container
        .row
            ul.nav.nav-tabs#options
                li.tabled.active
                    a Groups
                li.tabled
                    a Members
                li 
                    a(href="/facilitators") Facilitators
                li 
                    | Workshops
                li
                    a(href="/statistics") Statistics
                li
                    a(href="/emails") Emails
        .row
            table.table.table-striped#table
        script.
            $(function() {
                var table;
                $('#options > li.tabled > a').click(function () {
                    $('ul.nav-tabs > .active').toggleClass('active');
                    $(this).parent().toggleClass('active');
                    $('#table').dataTable().fnDestroy();
                    $('#table').empty();
                    $('.ColVis').remove();
                    render($(this).html().toLowerCase());
                });
                render('groups');
                // Setup Table
                function render(selected) {
                    $.get('/admin/' + selected, function (result) {
                        var options = {
                            data: result.data,
                            columns: result.keys,
                            stateSave: true,
                        };
                        var reorderOptions = {};
                        if (selected === 'groups') {
                            reorderOptions.fixedColumns = 1;
                            reorderOptions.fixedColumnsLeft = 2;
                            options.columnDefs = [
                                {
                                    render: function (data, type, row) {
                                        var steps = ['conduct', 'details', 'youthInCare', 'members', 'documents', 'payments', 'workshops', 'checkin'];
                                        var output = steps.map(function (v) {
                                            if (data[v]) {
                                                return "<button class='steps btn btn-xs btn-success' data-toggle='tooltip' title='" + v + "' data-url='/checkoff/" + row['_id'] + "/" + v + "'><i class='fa fa-check fa-fw'></i></button>";
                                            } else {
                                                return "<button class='steps btn btn-xs btn-danger' data-toggle='tooltip' title='" + v + "' data-url='/checkoff/" + row['_id'] + "/" + v + "'><i class='fa fa-remove fa-fw'></i></button>";
                                            }
                                        }).join('');
                                        if (row['youthInCareSupport'] > 0 || row['youthInCare'] > 0) {
                                            var yic = "<div class='label label-success'><i class='fa fa-flag fa-fw'></i>" + row['youthInCare'] + ", " + row['youthInCareSupport'] + "</div>";
                                            output = output.concat(yic);
                                        }
                                        return output;
                                    },
                                    targets: 0
                                },
                                {
                                    render: function (data, type, row) {
                                        data = data.map(function (v) {
                                            return "<span class='badge badge-default'>" + v + "</span><br>";
                                        }).join('');
                                        return data;
                                    },
                                    targets: -2
                                },
                                {
                                    render: function (data, type, row) {
                                        data = "<a class='btn btn-primary btn-xs' href='/manage/" + row._id + "'><i class='fa fa-edit'></i> Manage</a>";
                                        data = data.concat("<a class='btn btn-info btn-xs' href='/notes/" + row._id + "'><i class='fa fa-file'></i> Notes</a>");
                                        return data;
                                    },
                                    targets: -1
                                }
                            ];
                            options.createdRow = function(row, data, dataIndex) {
                                $(row).find('.steps').tooltip().click(function () {
                                    var button = $(this);
                                    button.attr('disabled', true);
                                    $.getJSON(button.data('url')).done(function (data) {
                                        if (data.error) {
                                            alert('Unable to mark! Group does not meet prerequisites.');
                                        } else if (data.done === true) {
                                            button.removeClass('btn-danger');
                                            button.addClass('btn-success');
                                            var icon = button.find('.fa');
                                            icon.removeClass('fa-remove');
                                            icon.addClass('fa-check');
                                        } else if (data.done === false) {
                                            button.removeClass('btn-success');
                                            button.addClass('btn-danger');
                                            var icon = button.find('.fa');
                                            icon.removeClass('fa-check');
                                            icon.addClass('fa-remove');
                                        }
                                        button.removeAttr('disabled');
                                    });
                                });
                            };
                        } else {
                            reorderOptions.fixedColumns = 1;
                        }
                        table = $('#table').dataTable(options);
                        // Setup Colreorder
                        new $.fn.dataTable.ColReorder(table, { fixedColumns: 2 });
                        // Setup Colvis
                        var colvis = new $.fn.dataTable.ColVis(table);
                        $(colvis.button()).insertAfter('#options');
                    });
                }
            });
